[project]
name = "sk-agents"
dynamic = ["version"]
description = "Teal Agents - Core Agent Framework"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "semantic-kernel==1.33.0",
    "pyyaml",
    "pydantic",
    "pydantic-yaml",
    "fastapi [standard]",
    "python-dotenv",
    "anthropic",
    "boto3",
    "PyGithub",
    "opentelemetry-exporter-otlp-proto-grpc",
    "ska-utils",
    "lock",
    "a2a-sdk==0.2.4",
    "redis>=6.0.0",
    "google-generativeai>=0.8.5",
    "google-ai-generativelanguage>=0.6.15",
]

[project.urls]
Homepage = "https://github.com/MSDLLCpapers/teal-agents"
Repository = "https://github.com/MSDLLCpapers/teal-agents"

[tool.uv]
prerelease = "allow"

[tool.uv.sources]
ska-utils = { path = "../../shared/ska_utils" }

[tool.hatch.build.targets.sdist]
include = [
    "src"
]

[tool.hatch.build.targets.wheel]
packages = ["src/sk_agents"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/sk_agents/__about__.py"
fallback-version = "0.0.0"

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "mypy",
    "ruff",
    "pytest",
    "coverage",
    "pytest-cov",
    "hatchling",
    "hatch",
    "pytest-mock",
    "pytest-asyncio",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.0",
    "mkdocstrings[python]>=0.28.0",
    "mkdocs-static-i18n>=1.3.0",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "UP046", # Ignore Generic class `InvokeResponse` uses `Generic` subclass instead of type parameters
]
isort = { combine-as-imports = true }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false
files = ["src/sk_agents/", "tests/"]
follow_imports = "skip"
python_version = 3.12
overrides = [
  { module = [
    "ska_utils.*",
  ], ignore_missing_imports = true },
]
exclude = ["src/sk_agents/routes.py","src/sk_agents/a2a_event_handler.py"]

[tool.coverage.run]
source = ["src/sk_agents"]
omit = ["*/tests/*", "test_*", "__init__.py"]

[tool.coverage.report]
show_missing = true
sort = "-Cover"
exclude_also = [
    # This is only executed while typechecking
    "if TYPE_CHECKING:",
    "@abc.abstractmethod",
    "raise NotImplementedError",
    "logger.debug",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::pydantic.warnings.PydanticDeprecatedSince211",
    "ignore:The `__get_pydantic_core_schema__` method of the `BaseModel` class is deprecated:DeprecationWarning"
]
